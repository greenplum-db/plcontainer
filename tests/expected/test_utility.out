\! $(pwd)/test_utility.sh
usage: plcontainer [-h] [--verbose]
                   {configure,install,image-add,image-delete,image-list,runtime-add,runtime-update,runtime-list,runtime-delete,runtime-edit,runtime-restore,runtime-verify}
                   ...

positional arguments:
  {configure,install,image-add,image-delete,image-list,runtime-add,runtime-update,runtime-list,runtime-delete,runtime-edit,runtime-restore,runtime-verify}
    configure           Configure plcontainer name and image location as well
                        as shared folder, need to combine with -n, -i and -l,
                        usage: -n plcontainer_name -i docker_image_url -l
                        plcontainer_language_type
    install             Install a dokcer image and add it to configuration
                        file
    image-add           Install specified docker image on all hosts
    image-delete        Delete specified docker image on all hosts
    image-list          Show existing container images on the current host
    runtime-add         Add a container runtime configuration on all hosts
    runtime-update      Update/Add a container runtime configuration on all
                        hosts
    runtime-list        List all container runtime configurations. You could
                        use this command to backup
    runtime-delete      Delete a container runtime configuration on all hosts
    runtime-edit        editor to edit and then update configuration on all
                        hosts
    runtime-restore     Restore the runtime configuration from a file and
                        distribute them to all hosts
    runtime-verify      Verify all configuration files are the same, and do
                        the auto fix if needed

optional arguments:
  -h, --help            show this help message and exit
  --verbose             Enable verbose logging
Test image-add: negative cases
usage: plcontainer image-add [-h] (-f FILE | -u URL)
plcontainer image-add: error: one of the arguments -f/--file -u/--url is required
usage: plcontainer image-add [-h] (-f FILE | -u URL)
plcontainer image-add: error: one of the arguments -f/--file -u/--url is required
-docker image file nonexist_file does not exist
-Getting docker image from nonexist_url
-Cannot pull docker image from nonexist_url
Test image-delete: negative cases
usage: plcontainer image-delete [-h] -i IMAGE_NAME
plcontainer image-delete: error: argument -i/--image is required
usage: plcontainer image-delete [-h] -i IMAGE_NAME
plcontainer image-delete: error: argument -i/--image is required
Test image-list: negative cases
usage: plcontainer [-h] [--verbose]
                   {configure,install,image-add,image-delete,image-list,runtime-add,runtime-update,runtime-list,runtime-delete,runtime-edit,runtime-restore,runtime-verify}
                   ...
plcontainer: error: unrecognized arguments: not_exist
Prepare a blank runtime configuration file and test runtime-list
-Distributing file plcontainer_configuration.xml to all locations...
-Configuration has changed. Run "select * from plcontainer_refresh_config" in open sessions. New sessions will get new configuration automatically
<?xml version="1.0" ?>
<configuration>
</configuration>

Test runtime-add: nagative cases
usage: plcontainer runtime-add [-h] -r RUNTIME_ID -i IMAGE_NAME -l {r,python}
                               [-v SHARED] [-s SETTING]
plcontainer runtime-add: error: argument -i/--image is required
usage: plcontainer runtime-add [-h] -r RUNTIME_ID -i IMAGE_NAME -l {r,python}
                               [-v SHARED] [-s SETTING]
plcontainer runtime-add: error: argument -r/--runtime is required
usage: plcontainer runtime-add [-h] -r RUNTIME_ID -i IMAGE_NAME -l {r,python}
                               [-v SHARED] [-s SETTING]
plcontainer runtime-add: error: argument -l/--language is required
usage: plcontainer runtime-add [-h] -r RUNTIME_ID -i IMAGE_NAME -l {r,python}
                               [-v SHARED] [-s SETTING]
plcontainer runtime-add: error: argument -l/--language: invalid choice: 'java' (choose from 'r', 'python')
Test runtime-add, runtime-list, and runtime-delete
-Distributing file plcontainer_configuration.xml to all locations...
-Configuration has changed. Run "select * from plcontainer_refresh_config" in open sessions. New sessions will get new configuration automatically
<?xml version="1.0" ?>
<configuration>
    <runtime>
        <id>runtime1</id>
        <image>image1</image>
        <command>/clientdir/pyclient.sh</command>
        <shared_directory access="ro" container="/clientdir" host="GPHOME/bin/plcontainer_clients"/>
    </runtime>
</configuration>
-Distributing file plcontainer_configuration.xml to all locations...
-Configuration has changed. Run "select * from plcontainer_refresh_config" in open sessions. New sessions will get new configuration automatically
<?xml version="1.0" ?>
<configuration>
    </configuration>
-This runtime configuraiton does not exist. Ignoring.
Test runtime-add with shared directories
-Distributing file plcontainer_configuration.xml to all locations...
-Configuration has changed. Run "select * from plcontainer_refresh_config" in open sessions. New sessions will get new configuration automatically
-Distributing file plcontainer_configuration.xml to all locations...
-Configuration has changed. Run "select * from plcontainer_refresh_config" in open sessions. New sessions will get new configuration automatically
-Distributing file plcontainer_configuration.xml to all locations...
-Configuration has changed. Run "select * from plcontainer_refresh_config" in open sessions. New sessions will get new configuration automatically
-Distributing file plcontainer_configuration.xml to all locations...
-Configuration has changed. Run "select * from plcontainer_refresh_config" in open sessions. New sessions will get new configuration automatically
Test runtime-add with both shared directories and settings
-Distributing file plcontainer_configuration.xml to all locations...
-Configuration has changed. Run "select * from plcontainer_refresh_config" in open sessions. New sessions will get new configuration automatically
-Distributing file plcontainer_configuration.xml to all locations...
-Configuration has changed. Run "select * from plcontainer_refresh_config" in open sessions. New sessions will get new configuration automatically
<?xml version="1.0" ?>
<configuration>
    <runtime>
        <id>runtime1</id>
        <image>image1</image>
        <command>/clientdir/pyclient.sh</command>
        <shared_directory access="ro" container="/clientdir" host="GPHOME/bin/plcontainer_clients"/>
        <shared_directory access="rw" container="/container_dir1/shared1" host="/host_dir1/shared1"/>
        <shared_directory access="ro" container="/container_dir1/shared2" host="/host_dir1/shared2"/>
    </runtime>
    <runtime>
        <id>runtime2</id>
        <image>image2</image>
        <command>/clientdir/rclient.sh</command>
        <shared_directory access="ro" container="/clientdir" host="GPHOME/bin/plcontainer_clients"/>
        <shared_directory access="rw" container="/container_dir2/shared1" host="/host_dir2/shared1"/>
        <shared_directory access="ro" container="/container_dir2/shared2" host="/host_dir2/shared2"/>
        <setting memory_mb="512"/>
        <setting user_network="yes"/>
    </runtime>
</configuration>
-Distributing file plcontainer_configuration.xml to all locations...
-Configuration has changed. Run "select * from plcontainer_refresh_config" in open sessions. New sessions will get new configuration automatically
-Distributing file plcontainer_configuration.xml to all locations...
-Configuration has changed. Run "select * from plcontainer_refresh_config" in open sessions. New sessions will get new configuration automatically
<?xml version="1.0" ?>
<configuration>
    </configuration>
Recover the previous runtime configuration file
-Distributing file plcontainer_configuration.xml to all locations...
-Configuration has changed. Run "select * from plcontainer_refresh_config" in open sessions. New sessions will get new configuration automatically

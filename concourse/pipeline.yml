################################################################################
#################################### GROUPS ####################################
################################################################################

groups:
- name: plcontainer
  jobs:
  - plcontainer_client_build
  - plcontainer_build_centos7
  - plcontainer_build_ubuntu18
  - plcontainer_build_python_image
  - plcontainer_build_r_image
  - plcontainer_function_test_centos7
  - plcontainer_resgroup_test_centos7
  - plcontainer_resgroup_test_ubuntu18
  - plcontainer_function_test_ubuntu18

################################################################################
################################## RESOURCES ###################################
################################################################################
ccp_create_params_anchor: &ccp_default_params
  action: create
  delete_on_failure: true
  generate_random_name: true
  terraform_source: ccp_src/google/

ccp_vars_anchor: &ccp_default_vars
  instance_type: n1-standard-2
  platform: centos6

ccp_gen_cluster_default_params_anchor: &ccp_gen_cluster_default_params
  AWS_ACCESS_KEY_ID: {{tf-machine-access-key-id}}
  AWS_SECRET_ACCESS_KEY: {{tf-machine-secret-access-key}}
  AWS_DEFAULT_REGION: {{aws-region}}
  BUCKET_PATH: clusters-google/
  BUCKET_NAME: {{tf-bucket-name}}
  CLOUD_PROVIDER: google

ccp_destroy_anchor: &ccp_destroy
  put: terraform
  params:
    action: destroy
    env_name_file: terraform/name
    terraform_source: ccp_src/google/
    vars:
      aws_instance-node-instance_type: t2.micro #t2.micro is ignored in destroy, but aws_instance-node-instance_type is required.
      aws_ebs_volume_type: standard
  get_params:
    action: destroy


ccp_options_anchor7: &ccp_options7
  terraform_source: ccp_src/google/
  vars:
    instance_type: n1-standard-2
    platform: centos7

set_failed_anchor: &set_failed
  do:
  - task: on_failure_set_failed
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: pivotaldata/ccp
          tag: "7"
      inputs:
        - name: ccp_src
        - name: terraform
      run:
        path: 'ccp_src/google/ccp_failed_test.sh'
      params:
        GOOGLE_CREDENTIALS: {{google-service-account-key}}
        GOOGLE_PROJECT_ID: {{google-project-id}}
        GOOGLE_ZONE: {{google-zone}}
        GOOGLE_SERVICE_ACCOUNT: {{google-service-account}}
        AWS_ACCESS_KEY_ID: {{tf-machine-access-key-id}}
        AWS_SECRET_ACCESS_KEY: {{tf-machine-secret-access-key}}
        AWS_DEFAULT_REGION: {{tf-machine-region}}
        BUCKET_PATH: clusters-google/
        BUCKET_NAME: {{tf-bucket-name}}


## ======================================================================
## resource types
## ======================================================================

resource_types:
- name: gcs
  type: docker-image
  source:
    repository: frodenas/gcs-resource

- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource

resources:

# Github Source Codes
- name: data-science-bundle
  type: git
  source:
    branch: ((dcs-git-branch))
    private_key: {{plpkg-git-key}}
    uri: git@github.com:greenplum-db/data-science-bundle.git

# ccp_src tag_filter is not maintained by gpdb_common-ci-secrets.yml
# so we just pull the laster ccp_src without tag_filter
- name: ccp_src
  type: git
  source:
    branch: {{ccp-git-branch}}
    private_key: {{ccp-git-key}}
    uri: {{ccp-git-remote}}

- name: plcontainer_src
  type: git
  source:
    branch: ((plcontainer-git-branch))
    uri: https://github.com/greenplum-db/plcontainer.git

- name: gpdb_src
  type: git
  source:
    branch: {{gpdb-git-branch}}
    uri: {{gpdb-git-remote}}
    ignore_paths:
    - gpdb-doc/*
    - README*

- name: terraform
  type: terraform
  source:
    env:
      AWS_ACCESS_KEY_ID: {{tf-machine-access-key-id}}
      AWS_SECRET_ACCESS_KEY: {{tf-machine-secret-access-key}}
      GOOGLE_CREDENTIALS: {{google-service-account-key}}
    vars:
      project_id: {{google-project-id}}
    storage:
      access_key_id: {{tf-machine-access-key-id}}
      secret_access_key: {{tf-machine-secret-access-key}}
      region_name: {{aws-region}}
      # This is not parameterized, on purpose. All tfstates will go to this spot,
      # and different teams will place there clusters' tfstate files under different paths
      bucket: {{tf-bucket-name}}
      bucket_path: clusters-google/

# Docker images

- name: centos-gpdb-dev-7
  type: docker-image
  source:
    repository: pivotaldata/centos-gpdb-dev
    tag: 7-gcc6.2-llvm3.7

# S3 Input and intermediate binaries

- name: plr_gpdb6_ubuntu18_build
  type: gcs
  source:
    bucket: {{gcs-bucket-intermediates}}
    json_key: {{concourse-gcs-resources-service-account-key}}
    regexp: plr/plr-ubuntu18/gpdb6/plr-(.*).gppkg

- name: plr_gpdb6_centos7_build
  type: gcs
  source:
    bucket: {{gcs-bucket}}
    json_key: {{concourse-gcs-resources-service-account-key}}
    regexp: plr/released/gpdb6/plr-(.*)-rhel7-x86_64.gppkg

- name: openssl
  type: s3
  source:
    access_key_id: {{artifact-bucket-access-key-id}}
    bucket: toolsmiths-concourse-artifacts
    region_name: {{aws-region}}
    secret_access_key: {{artifact-bucket-secret-access-key}}
    versioned_file: gpdb-ext-release-local/OpenSSL/openssl/1.0.2l/targzs/openssl-rhel7_x86_64-1.0.2l.targz

- name: python-gp5
  type: s3
  source:
    access_key_id: {{artifact-bucket-access-key-id}}
    bucket: toolsmiths-concourse-artifacts
    region_name: {{aws-region}}
    secret_access_key: {{artifact-bucket-secret-access-key}}
    versioned_file: gpdb-ext-release-local/Python/python-gpdb5/2.7.12/targzs/python-rhel7_x86_64-2.7.12.targz

- name: plcontainer_docker_image_centos_python
  type: gcs
  source:
    bucket: {{gcs-bucket-intermediates}}
    json_key: {{concourse-gcs-resources-service-account-key}}
    versioned_file: plcontainer/published/gpdb6/plcontainer-python-images-devel.tar.gz

- name: plcontainer_docker_image_centos_r
  type: gcs
  source:
    bucket: {{gcs-bucket-intermediates}}
    json_key: {{concourse-gcs-resources-service-account-key}}
    versioned_file: plcontainer/published/gpdb6/plcontainer-r-images-devel.tar.gz

- name: bin_gpdb_centos7
  type: gcs
  source:
    bucket: {{gcs-bucket-intermediates}}
    json_key: {{concourse-gcs-resources-service-account-key}}
    versioned_file: 6X_STABLE/bin_gpdb_centos7/bin_gpdb.tar.gz


- name: plcontainer_gpdb_ubuntu18_build
  type: gcs
  source:
    bucket: {{gcs-bucket-intermediates}}
    json_key: {{concourse-gcs-resources-service-account-key}}
    versioned_file: plcontainer/published/gpdb6/plcontainer-concourse-ubuntu18.gppkg

- name: plcontainer_client_ubuntu18_build
  type: gcs
  source:
    bucket: {{gcs-bucket-intermediates}}
    json_key: {{concourse-gcs-resources-service-account-key}}
    versioned_file: plcontainer/published/gpdb6/plcontainer_client.tar.gz

- name: plcontainer_gpdb_centos7_build
  type: gcs
  source:
    bucket: {{gcs-bucket-intermediates}}
    json_key: {{concourse-gcs-resources-service-account-key}}
    versioned_file: plcontainer/published/gpdb6/plcontainer-concourse-centos7.gppkg

- name: bin_gpdb_ubuntu18
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: procedural-languages-concourse-gpdb-5x-stable
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: build/gpdb_6x/bin_gpdb_ubuntu16/bin_gpdb.tar.gz

- name: ubuntu18-image
  type: docker-image
  source:
    repository: pivotaldata/ubuntu-gpdb-dev
    tag: '16.04'

##################################### JOBS #####################################
################################################################################

jobs:

- name: plcontainer_client_build
  max_in_flight: 4
  plan:
  - aggregate:
    - get: plcontainer_src
      trigger: true
    - get: ubuntu18-image
  - task: plcontainer_client_build
    file: plcontainer_src/concourse/tasks/plcontainer_client_build.yml
    image: ubuntu18-image
  - aggregate:
    - put: plcontainer_client_ubuntu18_build
      params:
        file: plcontainer_client/plcontainer_client.tar.gz

# Build PL/Container GP Package
- name: plcontainer_build_ubuntu18
  max_in_flight: 4
  plan:
  - aggregate:
    - get: bin_gpdb_ubuntu18
    - get: gpdb_src
    - get: plcontainer_src
    - get: plcontainer_client_ubuntu18_build
      passed: [plcontainer_client_build]
      trigger: true
    - get: ubuntu18-image
    - get: plr
      resource: plr_gpdb6_ubuntu18_build
  - task: plcontainer_gpdb_build
    file: plcontainer_src/concourse/tasks/plcontainer_build_ubuntu18.yml
    image: ubuntu18-image
    input_mapping:
      bin_gpdb: bin_gpdb_ubuntu18
      plcontainer_client: plcontainer_client_ubuntu18_build
  - aggregate:
    - put: plcontainer_gpdb_ubuntu18_build
      params:
        file: plcontainer_gpdb_build/plcontainer-concourse.gppkg

- name: plcontainer_build_centos7
  max_in_flight: 4
  plan:
  - aggregate:
    - get: bin_gpdb_centos7
    - get: gpdb_src
    - get: plcontainer_src
    - get: plcontainer_client_ubuntu18_build
      passed: [plcontainer_client_build]
      trigger: true
    - get: centos-gpdb-dev-7
    - get: plr
      resource: plr_gpdb6_centos7_build
  - task: plcontainer_gpdb_build
    file: plcontainer_src/concourse/tasks/plcontainer_build.yml
    image: centos-gpdb-dev-7
    input_mapping:
      bin_gpdb: bin_gpdb_centos7
      plcontainer_client: plcontainer_client_ubuntu18_build
  - aggregate:
    - put: plcontainer_gpdb_centos7_build
      params:
        file: plcontainer_gpdb_build/plcontainer-concourse.gppkg

- name: plcontainer_function_test_ubuntu18
  plan:
  - aggregate:
    - get: plcontainer_src
      passed:
      - plcontainer_build_ubuntu18
    - get: gpdb_src
    - get: gpdb_binary
      resource: bin_gpdb_ubuntu18
    - get: ccp_src
      passed: [plcontainer_build_python_image, plcontainer_build_r_image]
    - get: ubuntu18-image
    - get: plcontainer_pyclient_docker_image
      resource: plcontainer_docker_image_centos_python
      passed: [plcontainer_build_python_image]
      trigger: true
    - get: plcontainer_rclient_docker_image
      resource: plcontainer_docker_image_centos_r
      passed: [plcontainer_build_r_image]
      trigger: true
    - get: plcontainer_gpdb_ubuntu18_build
      passed: [plcontainer_build_ubuntu18]
      trigger: true
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        instance_type: n1-standard-4
        PLATFORM: centos7
        disk_size: 100
        disk_type: pd-ssd
        zone: {{google-zone}}
        region: {{google-region}}
  - task: gen_cluster
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *ccp_gen_cluster_default_params
      PLATFORM: centos7
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: plcontainer
    file: plcontainer_src/concourse/tasks/plcontainer_tests.yml
    params:
      platform: ubuntu18
    image: ubuntu18-image
    input_mapping:
      plcontainer_gpdb_build: plcontainer_gpdb_ubuntu18_build
    on_success:
      <<: *ccp_destroy
  ensure:
    <<: *set_failed


- name: plcontainer_function_test_centos7
  plan:
  - aggregate:
    - get: plcontainer_src
      passed:
      - plcontainer_build_centos7
    - get: gpdb_src
    - get: gpdb_binary
      resource: bin_gpdb_centos7
    - get: ccp_src
      passed: [plcontainer_build_python_image, plcontainer_build_r_image]
    - get: centos-gpdb-dev-7
    - get: plcontainer_pyclient_docker_image
      resource: plcontainer_docker_image_centos_python
      passed: [plcontainer_build_python_image]
      trigger: true
    - get: plcontainer_rclient_docker_image
      resource: plcontainer_docker_image_centos_r
      passed: [plcontainer_build_r_image]
      trigger: true
    - get: plcontainer_gpdb_centos7_build
      passed: [plcontainer_build_centos7]
      trigger: true
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        instance_type: n1-standard-4
        PLATFORM: centos7
        disk_size: 100
        disk_type: pd-ssd
        zone: {{google-zone}}
        region: {{google-region}}
  - task: gen_cluster
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *ccp_gen_cluster_default_params
      PLATFORM: centos7
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: plcontainer
    file: plcontainer_src/concourse/tasks/plcontainer_tests.yml
    params:
      platform: centos7
    image: centos-gpdb-dev-7
    input_mapping:
      plcontainer_gpdb_build: plcontainer_gpdb_centos7_build
    on_success:
      <<: *ccp_destroy
  ensure:
    <<: *set_failed

- name: plcontainer_resgroup_test_centos7
  plan:
  - aggregate:
    - get: plcontainer_src
      passed:
      - plcontainer_build_centos7
    - get: gpdb_src
    - get: gpdb_binary
      resource: bin_gpdb_centos7
    - get: ccp_src
      passed: [plcontainer_build_python_image, plcontainer_build_r_image]
    - get: centos-gpdb-dev-7
    - get: plcontainer_pyclient_docker_image
      resource: plcontainer_docker_image_centos_python
      passed: [plcontainer_build_python_image]
      trigger: true
    - get: plcontainer_rclient_docker_image
      resource: plcontainer_docker_image_centos_r
      passed: [plcontainer_build_r_image]
      trigger: true
    - get: plcontainer_gpdb_centos7_build
      passed: [plcontainer_build_centos7]
      trigger: true
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        instance_type: n1-standard-4
        PLATFORM: centos7
        disk_size: 100
        disk_type: pd-ssd
        zone: {{google-zone}}
        region: {{google-region}}
  - task: gen_cluster
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *ccp_gen_cluster_default_params
      PLATFORM: centos7
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: plcontainer_resgroup
    file: plcontainer_src/concourse/tasks/plcontainer_resgroup_tests.yml
    params:
      TEST_OS: centos7
      platform: centos7
    image: centos-gpdb-dev-7
    input_mapping:
      plcontainer_gpdb_build: plcontainer_gpdb_centos7_build
    on_success:
      <<: *ccp_destroy
  ensure:
    <<: *set_failed

- name: plcontainer_resgroup_test_ubuntu18
  plan:
  - aggregate:
    - get: plcontainer_src
      passed:
      - plcontainer_build_ubuntu18
    - get: gpdb_src
    - get: gpdb_binary
      resource: bin_gpdb_ubuntu18
    - get: ccp_src
      passed: [plcontainer_build_python_image, plcontainer_build_r_image]
    - get: ubuntu18-image
    - get: plcontainer_pyclient_docker_image
      resource: plcontainer_docker_image_centos_python
      passed: [plcontainer_build_python_image]
      trigger: true
    - get: plcontainer_rclient_docker_image
      resource: plcontainer_docker_image_centos_r
      passed: [plcontainer_build_r_image]
      trigger: true
    - get: plcontainer_gpdb_ubuntu18_build
      passed: [plcontainer_build_ubuntu18]
      trigger: true
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        instance_type: n1-standard-4
        PLATFORM: centos7
        disk_size: 100
        disk_type: pd-ssd
        zone: {{google-zone}}
        region: {{google-region}}
  - task: gen_cluster
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *ccp_gen_cluster_default_params
      PLATFORM: ubuntu18
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: plcontainer_resgroup
    file: plcontainer_src/concourse/tasks/plcontainer_resgroup_tests.yml
    params:
      TEST_OS: ubuntu18
      platform: ubuntu18
    image: ubuntu18-image
    input_mapping:
      plcontainer_gpdb_build: plcontainer_gpdb_ubuntu18_build
    on_success:
      <<: *ccp_destroy
  ensure:
    <<: *set_failed

# We use CCP to build image, since 'docker build' needs docker 
# daemon is running. But we cannot start docker daemon inside 
# concourse container in a neat way.(running docker inside container is ugly)
- name: plcontainer_build_python_image
  plan:
  - aggregate:
    - get: plcontainer_src
    - get: gpdb_src
    - get: gpdb_binary
      resource: bin_gpdb_centos7
    - get: ccp_src
    - get: centos-gpdb-dev-7
    - get: data-science-bundle
    - get: python
      trigger: true
      resource: python-gp5
    - get: openssl
      trigger: true
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        instance_type: n1-standard-2
        PLATFORM: centos7
        disk_size: 100
        disk_type: pd-ssd
        zone: {{google-zone}}
        region: {{google-region}}
  - task: gen_cluster
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *ccp_gen_cluster_default_params
      PLATFORM: centos7
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: docker_build
    file: plcontainer_src/concourse/tasks/docker_build_python.yml
    params:
      platform: centos7
      language: python
    image: centos-gpdb-dev-7
    input_mapping:
      plcontainer_gpdb_build: plcontainer_gpdb_centos7_build
  - put: plcontainer_docker_image_centos_python
    params:
      file: plcontainer_docker_image/plcontainer-python-images-devel.tar.gz
    on_success:
      <<: *ccp_destroy
  ensure:
    <<: *set_failed

- name: plcontainer_build_r_image
  plan:
  - aggregate:
    - get: plcontainer_src
    - get: gpdb_src
    - get: gpdb_binary
      resource: bin_gpdb_centos7
    - get: ccp_src
    - get: centos-gpdb-dev-7
    - get: data-science-bundle
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        instance_type: n1-standard-2
        PLATFORM: centos7
        disk_size: 100
        disk_type: pd-ssd
        zone: {{google-zone}}
        region: {{google-region}}
  - task: gen_cluster
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *ccp_gen_cluster_default_params
      PLATFORM: centos7
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: docker_build
    file: plcontainer_src/concourse/tasks/docker_build_r.yml
    params:
      platform: centos7
      language: r
    image: centos-gpdb-dev-7
    input_mapping:
      plcontainer_gpdb_build: plcontainer_gpdb_centos7_build
  - put: plcontainer_docker_image_centos_r
    params:
      file: plcontainer_docker_image/plcontainer-r-images-devel.tar.gz
    on_success:
      <<: *ccp_destroy
  ensure:
    <<: *set_failed
